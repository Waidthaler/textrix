#!/usr/bin/perl

############################################################################
#                                                                          #
# The tokenizer is very largely based on work done by Yaser Al-Onaizan     #
# for the EGYPT NLP project. Mr. Al-Onaizan, in turn, based his work on    #
# scripts written by Dan Melamed. Its considerable capabilities were       #
# actually significantly *reduced* by Eric O'Dell, as the needs of Ulysses #
# were rather different from those of ordinary NLP.                        #
#                                                                          #
############################################################################
   
use strict;

#my $s = "I am a big, big \"quoted string,\" and don't you forget it!!!";

my $s; while(<STDIN>) { chomp; $s .= $_; }

my $then = time();
my @result = tokenize($s);
my $now = time();
my $runtime = $now - $then;
my $tcnt = @result;
print "4Runtime: $runtime seconds for $tcnt tokens\n";
#foreach(@result) { print "$_\n"; }

############################################################################
# This function takes a string and inserts spaces between all tokens, then
# splits the whole string on spaces and returns an array of tokens

sub tokenize {
    my $str = shift;

# stardardize quotes
    $str =~ s/\'\' /\" /g;
    $str =~ s/ \`\`/ \"/g;
    
# put space after any period that's followed by a non-number and non-period
    $str =~ s/\.([^0-9\.])/\. $1/g;
# put space before any period that's followed by a space or another period, 
# unless preceded by another period
# the following space is introduced in the previous command
    $str =~ s/([^\.])\.([ \.])/$1 \.$2/g;
    
# put space around sequences of colons and commas, unless they're
# surrounded by numbers or other colons and commas
    $str =~ s/([0-9:])\:([0-9:])/$1<CLTKN>$2/g;
    $str =~ s/\:/ \: /g;
    $str =~ s/([0-9]) ?<CLTKN> ?([0-9])/$1\:$2/g;
    $str =~ s/([0-9,])\,([0-9,])/$1<CMTKN>$2/g;
    $str =~ s/\,/ \, /g;
    $str =~ s/([0-9]) ?<CMTKN> ?([0-9])/$1\,$2/g;
    
# put space before any other punctuation and special symbol sequences

     $str =~ s/([^ !?;")(\/&^%\$+#*\[\]{}><_\\|=`²³«»¢°-])(\1+)/$1 $2/g;
     $str =~ s/([!?;")(\/&^%\$+#*\[\]{}><_\\|=²³«»¢°-]+)([^ !?;")(\/&^%\$+#*\[\]{}><_\\|=²³«»¢°-])/$1 $2/g;


# separate alphabetical tokens
# FIXME -- catches accented characters!

    $str =~ s/([a-zA-Z]+\'?[a-zA-z]+)/ $1 /g;    
        
    return split /\s+/, $str;
}





